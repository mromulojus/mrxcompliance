// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

// Configura√ß√µes din√¢micas baseadas no ambiente
const getEnvironmentConfig = () => {
  // 1. Primeiro, tenta usar vari√°veis de ambiente expl√≠citas
  const envUrl = (import.meta as any)?.env?.VITE_SUPABASE_URL as string | undefined;
  const envAnonKey = (import.meta as any)?.env?.VITE_SUPABASE_ANON_KEY as string | undefined;
  
  if (envUrl && envAnonKey) {
    return { url: envUrl, anonKey: envAnonKey };
  }

  // 2. Detecta ambiente baseado na URL atual
  const currentHost = typeof window !== 'undefined' ? window.location.hostname : '';
  
  // Configura√ß√µes por ambiente
  const environments = {
    // Produ√ß√£o
    production: {
      hosts: ['mrxbr.app', 'www.mrxbr.app'],
      url: "https://pxpscjyeqmqqxzbttbep.supabase.co",
      anonKey: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InB4cHNjanllcW1xcXh6YnR0YmVwIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTQ2NzMzMzksImV4cCI6MjA3MDI0OTMzOX0.pXHV4HvzqVpiLLoJIgtZ6hL9kxuJIPzIZXNHMfu4Wzc"
    },
    // Desenvolvimento/Local
    development: {
      hosts: ['localhost', '127.0.0.1', '0.0.0.0'],
      url: "https://pxpscjyeqmqqxzbttbep.supabase.co", // Usa mesmo projeto para desenvolvimento
      anonKey: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InB4cHNjanllcW1xcXh6YnR0YmVwIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTQ2NzMzMzksImV4cCI6MjA3MDI0OTMzOX0.pXHV4HvzqVpiLLoJIgtZ6hL9kxuJIPzIZXNHMfu4Wzc"
    }
  };

  // Detecta ambiente atual
  for (const [envName, config] of Object.entries(environments)) {
    if (config.hosts.some(host => currentHost.includes(host))) {
      console.log(`üîß Supabase: Detectado ambiente ${envName} (${currentHost})`);
      return { url: config.url, anonKey: config.anonKey };
    }
  }

  // Fallback para produ√ß√£o se n√£o conseguir detectar
  console.log(`‚ö†Ô∏è Supabase: Ambiente n√£o detectado (${currentHost}), usando configura√ß√£o de produ√ß√£o`);
  return environments.production;
};

const { url: SUPABASE_URL, anonKey: SUPABASE_PUBLISHABLE_KEY } = getEnvironmentConfig();

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    storage: typeof localStorage !== 'undefined' ? localStorage : undefined,
    persistSession: true,
    autoRefreshToken: true,
  }
});